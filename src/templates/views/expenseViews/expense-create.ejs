<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create expense page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
</head>

<body>
    <div class="container">
        <h1 class="col-12 mt-3">Create new expense</h1>
        <form class="row g-3" action="/expenses/post-expense" method="POST" onsubmit="handleSubmit(event)">
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="text" class="form-control" name="expenseName" placeholder="expense name" required>
                    <label for="expenseName">Expense name</label>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="text" class="form-control" id="money" name="money" placeholder="money" required>
                    <label for="money">Money</label>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="text" class="form-control" name="image" placeholder="Upload image">
                    <label for="image">Image</label>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-floating">
                    <input type="text" class="form-control" name="note" placeholder="note">
                    <label for="note">Note</label>
                </div>
            </div>
            <div class="col-md-12">
                <label for="category" class="form-label">Category</label>

                <div class="d-flex align-items-center">
                    <select class="form-select me-2" id="categoryId" name="categoryId">
                        <% categories.forEach(category=> { %>
                            <option value="<%= category.id %>">
                                <%= category.categoryName %>
                            </option>
                            <% }); %>
                    </select>
                    <button type="button" class="btn btn-outline-secondary"
                        onclick="openCreateCategoryModal()">Create</button>
                </div>

            </div>
            <div class="col-md-12">
                <label for="type" class="form-label">Type</label>

                <div class="d-flex align-items-center">
                    <select class="form-select me-2" id="typeId" name="typeId">
                        <% types.forEach(type=> { %>
                            <option value="<%= type.id %>">
                                <%= type.typeName %>
                            </option>
                            <% }); %>
                    </select>
                    <button type="button" class="btn btn-outline-secondary"
                        onclick="openCreateTypeModal()">Create</button>
                </div>

            </div>
            <div class="col-md-12">
                <button id="createButton" type="submit" class="btn btn-primary">Create</button>
                <a href="/expenses" class="btn btn-danger">Back</a>
            </div>
        </form>
    </div>
    <%- include('../categoryViews/category-create-modal') %>
        <%- include('../typeViews/type-create-modal') %>
            <script>
                handleSubmit = (event) => {
                    const createButton = document.getElementById('createButton');
                    createButton.innerHTML =
                        `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Loading...`;
                    createButton.disabled = true;
                    event.target.submit();
                }

                openCreateCategoryModal = () => {
                    const modal = new bootstrap.Modal(document.getElementById('createCategoryModal'));
                    modal.show();
                }

                document.getElementById('createCategoryForm').addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const categoryName = document.getElementById('newCategoryName').value;

                    const response = await fetch('/categories/post-category', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ categoryName }),
                    });

                    if (response.ok) {
                        const newCategory = await response.json();

                        const dropdown = document.getElementById('categoryId');
                        const option = document.createElement('option');
                        option.value = newCategory.id;
                        option.textContent = newCategory.categoryName;
                        dropdown.appendChild(option);

                        dropdown.value = newCategory.id;

                        const modal = bootstrap.Modal.getInstance(document.getElementById('createCategoryModal'));
                        modal.hide();
                    } else {
                        alert('Failed to create category');
                    }
                });

                openCreateTypeModal = () => {
                    const modal = new bootstrap.Modal(document.getElementById('createTypeModal'));
                    modal.show();
                }

                document.getElementById('createTypeForm').addEventListener('submit', async (e) => {
                    e.preventDefault();
                    const typeName = document.getElementById('newTypeName').value;

                    const response = await fetch('/types/post-type', {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ typeName }),
                    });

                    if (response.ok) {
                        const newType = await response.json();

                        const dropdown = document.getElementById('typeId');
                        const option = document.createElement('option');
                        option.value = newType.id;
                        option.textContent = newType.typeName;
                        dropdown.appendChild(option);

                        dropdown.value = newType.id;

                        const modal = bootstrap.Modal.getInstance(document.getElementById('createTypeModal'));
                        modal.hide();
                    } else {
                        alert('Failed to create type');
                    }
                });
            </script>
</body>

</html>